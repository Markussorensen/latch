Step 1/15 : from 812206152185.dkr.ecr.us-west-2.amazonaws.com/latch-base:9c8f-main


 ---> b253e8cdab51

Step 2/15 : run mkdir /opt/latch


 ---> Using cache

 ---> 89e0ab657f0d

Step 3/15 : RUN curl -L -O     https://github.com/conda-forge/miniforge/releases/latest/download/Mambaforge-Linux-x86_64.sh     && mkdir /root/.conda     && bash Mambaforge-Linux-x86_64.sh -b     && rm -f Mambaforge-Linux-x86_64.sh


 ---> Using cache

 ---> 7741d9d31977

Step 4/15 : copy environment.yaml /root/environment.yaml


 ---> Using cache

 ---> c2d3f498d2d5

Step 5/15 : run /root/mambaforge/bin/mamba env create --name snakemake-tutorial --file environment.yaml


 ---> Using cache

 ---> 0370179f98b9

Step 6/15 : env PATH /root/mambaforge/envs/snakemake-tutorial/bin:$PATH


 ---> Using cache

 ---> 558ea5988368

Step 7/15 : run python3 -m pip install latch


 ---> Using cache

 ---> 73f3b443e340

Step 8/15 : copy Snakefile config.yaml /root/


 ---> Using cache

 ---> da1c8fa40657

Step 9/15 : copy scripts/plot-quals.py /root/scripts/plot-quals.py


 ---> Using cache

 ---> 6e0a5622727c

Step 10/15 : copy .latch/latch_entrypoint.py /root/latch_entrypoint.py


 ---> 2c641c26711a

Step 11/15 : arg tag


 ---> Running in 35395e4bff4b

 ---> 6c77e2242b73

Step 12/15 : env FLYTE_INTERNAL_IMAGE $tag


 ---> Running in 75382a292780

 ---> c2b2d52f48dd

Step 13/15 : env LATCH_SDK_DOMAIN "ligma.ai"


 ---> Running in 1eaeb43fcdb6

 ---> b99ac2abf3bf

Step 14/15 : env LATCH_AUTHENTICATION_ENDPOINT https://nucleus.ligma.ai


 ---> Running in 8334c0825385

 ---> d8f22dea8baa

Step 15/15 : workdir /root


 ---> Running in 74f859724d35

 ---> 957f49e6cff2

Successfully built 957f49e6cff2

Successfully tagged 812206152185.dkr.ecr.us-west-2.amazonaws.com/x1_test_latch_register:0.0.0-b1b9b5

